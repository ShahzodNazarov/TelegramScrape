{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\REACT3\\\\my-app\\\\src\\\\test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport DG from \"2gis-maps\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sock = new WebSocket(\"ws://204.12.199.7:9999/ws\");\nexport default function Test() {\n  _s();\n  const [location, setLocation] = useState({\n    latitude: 41.471574,\n    longitude: 69.263856\n  });\n  sock.onopen = function (event) {\n    console.log(\"connection successful\");\n    sock.send(\"get data\");\n  };\n  sock.onmessage = function (event) {\n    let jsonData = JSON.parse(event.data);\n    let newObj = {\n      latitude: Number(jsonData[0].Latitude),\n      longitude: Number(jsonData[0].Longitude)\n    };\n    setLocation(newObj);\n    console.log(newObj);\n  };\n  sock.onclose = function (event) {\n    console.log(event.data);\n    console.log(\"connection closed\");\n  };\n  useEffect(() => {\n    let map;\n    map = DG.map('map-container', {\n      center: [location.latitude, location.longitude],\n      zoom: 15\n    });\n    const icon = DG.icon({\n      iconUrl: \"https://freepngimg.com/thumb/car/75694-bird's-eye-car-top-view,plan-view-icon.png\",\n      iconSize: [35, 30]\n    });\n    DG.marker([location.latitude, location.longitude], {\n      icon: icon\n    }).addTo(map).bindPopup('open');\n\n    // Set max zoom level\n    map.setMinZoom(3);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-container\",\n    style: {\n      width: '100%',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"aPbHaG7VGZc+p3Myz16WRbcc/Jk=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","DG","useState","jsxDEV","_jsxDEV","sock","WebSocket","Test","_s","location","setLocation","latitude","longitude","onopen","event","console","log","send","onmessage","jsonData","JSON","parse","data","newObj","Number","Latitude","Longitude","onclose","map","center","zoom","icon","iconUrl","iconSize","marker","addTo","bindPopup","setMinZoom","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/REACT3/my-app/src/test.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport DG from \"2gis-maps\";\r\nimport { useState } from \"react\";\r\nconst sock = new WebSocket(\"ws://204.12.199.7:9999/ws\");\r\n\r\nexport default function Test() {\r\n\r\n  const [location, setLocation] = useState({\r\n    latitude: 41.471574,\r\n    longitude: 69.263856,\r\n  });\r\n  \r\n  sock.onopen = function (event) {\r\n    console.log(\"connection successful\");\r\n    sock.send(\"get data\");\r\n  };\r\n\r\n  sock.onmessage = function (event) {\r\n    let jsonData=JSON.parse(event.data);\r\n    let newObj={\r\n      latitude:Number(jsonData[0].Latitude),\r\n      longitude:Number(jsonData[0].Longitude),\r\n    };\r\n    setLocation(newObj);\r\n    console.log(newObj);\r\n  };\r\n\r\n  sock.onclose = function (event) {\r\n    console.log(event.data);\r\n    console.log(\"connection closed\");\r\n  };\r\n\r\n  useEffect(()=>{\r\n\r\n    let map;\r\n    map=DG.map('map-container',{\r\n      center:[location.latitude, location.longitude],\r\n      zoom:15\r\n    });\r\n\r\n    const icon = DG.icon({\r\n      iconUrl: \"https://freepngimg.com/thumb/car/75694-bird's-eye-car-top-view,plan-view-icon.png\",\r\n      iconSize:[35,30]\r\n    });\r\n\r\n    DG.marker([location.latitude, location.longitude],{icon:icon}).addTo(map).bindPopup('open')\r\n    \r\n    // Set max zoom level\r\n    map.setMinZoom(3);\r\n  },[])\r\n\r\n  return (\r\n    <div id=\"map-container\" style={{width:'100%',height:'100vh'}}>\r\n        \r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,EAAE,MAAM,WAAW;AAC1B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,IAAI,GAAG,IAAIC,SAAS,CAAC,2BAA2B,CAAC;AAEvD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,QAAQ,EAAE,SAAS;IACnBC,SAAS,EAAE;EACb,CAAC,CAAC;EAEFP,IAAI,CAACQ,MAAM,GAAG,UAAUC,KAAK,EAAE;IAC7BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCX,IAAI,CAACY,IAAI,CAAC,UAAU,CAAC;EACvB,CAAC;EAEDZ,IAAI,CAACa,SAAS,GAAG,UAAUJ,KAAK,EAAE;IAChC,IAAIK,QAAQ,GAACC,IAAI,CAACC,KAAK,CAACP,KAAK,CAACQ,IAAI,CAAC;IACnC,IAAIC,MAAM,GAAC;MACTZ,QAAQ,EAACa,MAAM,CAACL,QAAQ,CAAC,CAAC,CAAC,CAACM,QAAQ,CAAC;MACrCb,SAAS,EAACY,MAAM,CAACL,QAAQ,CAAC,CAAC,CAAC,CAACO,SAAS;IACxC,CAAC;IACDhB,WAAW,CAACa,MAAM,CAAC;IACnBR,OAAO,CAACC,GAAG,CAACO,MAAM,CAAC;EACrB,CAAC;EAEDlB,IAAI,CAACsB,OAAO,GAAG,UAAUb,KAAK,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACQ,IAAI,CAAC;IACvBP,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAClC,CAAC;EAEDhB,SAAS,CAAC,MAAI;IAEZ,IAAI4B,GAAG;IACPA,GAAG,GAAC3B,EAAE,CAAC2B,GAAG,CAAC,eAAe,EAAC;MACzBC,MAAM,EAAC,CAACpB,QAAQ,CAACE,QAAQ,EAAEF,QAAQ,CAACG,SAAS,CAAC;MAC9CkB,IAAI,EAAC;IACP,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG9B,EAAE,CAAC8B,IAAI,CAAC;MACnBC,OAAO,EAAE,mFAAmF;MAC5FC,QAAQ,EAAC,CAAC,EAAE,EAAC,EAAE;IACjB,CAAC,CAAC;IAEFhC,EAAE,CAACiC,MAAM,CAAC,CAACzB,QAAQ,CAACE,QAAQ,EAAEF,QAAQ,CAACG,SAAS,CAAC,EAAC;MAACmB,IAAI,EAACA;IAAI,CAAC,CAAC,CAACI,KAAK,CAACP,GAAG,CAAC,CAACQ,SAAS,CAAC,MAAM,CAAC;;IAE3F;IACAR,GAAG,CAACS,UAAU,CAAC,CAAC,CAAC;EACnB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEjC,OAAA;IAAKkC,EAAE,EAAC,eAAe;IAACC,KAAK,EAAE;MAACC,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExD,CAAC;AAEV;AAACrC,EAAA,CAnDuBD,IAAI;AAAAuC,EAAA,GAAJvC,IAAI;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}