{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\REACT3\\\\my-app\\\\src\\\\leaflet2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMapEvents, Tooltip } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GPSMap2 = () => {\n  _s();\n  const [position, setPosition] = useState([51.505, -0.09]); // Initial position\n  const [trail, setTrail] = useState([]);\n  const [angles, setAngles] = useState([]);\n\n  // Function to update position randomly for demonstration\n  const updatePosition = () => {\n    const lat = position[0] + Math.random() * 0.01; // Adjust as needed\n    const lng = position[1] + Math.random() * 0.01; // Adjust as needed\n    setPosition([lat, lng]);\n    setTrail(prevTrail => [...prevTrail, [lat, lng]]);\n  };\n\n  // Update position periodically\n  useEffect(() => {\n    const interval = setInterval(updatePosition, 3000); // Adjust interval as needed\n    return () => clearInterval(interval);\n  }, []);\n\n  // Calculate angle between three points\n  const calculateAngle = (p1, p2, p3) => {\n    const angle1 = Math.atan2(p2[1] - p1[1], p2[0] - p1[0]);\n    const angle2 = Math.atan2(p3[1] - p2[1], p3[0] - p2[0]);\n    let angle = (angle2 - angle1) * (180 / Math.PI);\n    if (angle < 0) angle += 360;\n    return angle.toFixed(2);\n  };\n\n  // Calculate angles between consecutive segments in the trail\n  useEffect(() => {\n    const newAngles = [];\n    for (let i = 1; i < trail.length - 1; i++) {\n      const angle = calculateAngle(trail[i - 1], trail[i], trail[i + 1]);\n      newAngles.push(angle);\n    }\n    setAngles(newAngles);\n  }, [trail]);\n\n  // Marker that moves continuously\n  const WalkingMarker = () => /*#__PURE__*/_jsxDEV(Marker, {\n    position: position,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: \"You are here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: position,\n    zoom: 13,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WalkingMarker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n      pathOptions: {\n        color: 'blue'\n      },\n      positions: trail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), angles.map((angle, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: trail[index + 1],\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        direction: \"bottom\",\n        offset: [0, 20],\n        children: [angle, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(GPSMap2, \"ul8LVWzR8KpBukYS+5h8nVxRBCc=\");\n_c = GPSMap2;\nexport default GPSMap;\nvar _c;\n$RefreshReg$(_c, \"GPSMap2\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Polyline","useMapEvents","Tooltip","jsxDEV","_jsxDEV","GPSMap2","_s","position","setPosition","trail","setTrail","angles","setAngles","updatePosition","lat","Math","random","lng","prevTrail","interval","setInterval","clearInterval","calculateAngle","p1","p2","p3","angle1","atan2","angle2","angle","PI","toFixed","newAngles","i","length","push","WalkingMarker","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","attribution","pathOptions","color","positions","map","index","direction","offset","_c","GPSMap","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/REACT3/my-app/src/leaflet2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMapEvents, Tooltip } from 'react-leaflet';\r\n\r\nconst GPSMap2 = () => {\r\n  const [position, setPosition] = useState([51.505, -0.09]); // Initial position\r\n  const [trail, setTrail] = useState([]);\r\n  const [angles, setAngles] = useState([]);\r\n\r\n  // Function to update position randomly for demonstration\r\n  const updatePosition = () => {\r\n    const lat = position[0] + Math.random() * 0.01; // Adjust as needed\r\n    const lng = position[1] + Math.random() * 0.01; // Adjust as needed\r\n    setPosition([lat, lng]);\r\n    setTrail((prevTrail) => [...prevTrail, [lat, lng]]);\r\n  };\r\n\r\n  // Update position periodically\r\n  useEffect(() => {\r\n    const interval = setInterval(updatePosition, 3000); // Adjust interval as needed\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Calculate angle between three points\r\n  const calculateAngle = (p1, p2, p3) => {\r\n    const angle1 = Math.atan2(p2[1] - p1[1], p2[0] - p1[0]);\r\n    const angle2 = Math.atan2(p3[1] - p2[1], p3[0] - p2[0]);\r\n    let angle = (angle2 - angle1) * (180 / Math.PI);\r\n    if (angle < 0) angle += 360;\r\n    return angle.toFixed(2);\r\n  };\r\n\r\n  // Calculate angles between consecutive segments in the trail\r\n  useEffect(() => {\r\n    const newAngles = [];\r\n    for (let i = 1; i < trail.length - 1; i++) {\r\n      const angle = calculateAngle(trail[i - 1], trail[i], trail[i + 1]);\r\n      newAngles.push(angle);\r\n    }\r\n    setAngles(newAngles);\r\n  }, [trail]);\r\n\r\n  // Marker that moves continuously\r\n  const WalkingMarker = () => (\r\n    <Marker position={position}>\r\n      <Popup>You are here</Popup>\r\n    </Marker>\r\n  );\r\n\r\n  return (\r\n    <MapContainer center={position} zoom={13} style={{ height: '400px', width: '100%' }}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n      <WalkingMarker />\r\n      <Polyline pathOptions={{ color: 'blue' }} positions={trail} />\r\n      {angles.map((angle, index) => (\r\n        <Marker key={index} position={trail[index + 1]}>\r\n          <Tooltip direction=\"bottom\" offset={[0, 20]}>{angle}Â°</Tooltip>\r\n        </Marker>\r\n      ))}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default GPSMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}