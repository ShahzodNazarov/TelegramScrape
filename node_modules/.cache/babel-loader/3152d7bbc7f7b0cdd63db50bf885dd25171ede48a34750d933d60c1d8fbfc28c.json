{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\REACT3\\\\my-app\\\\src\\\\google.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport DG from \"2gis-maps\";\nimport { WebSocket } from \"ws\"; // Import WebSocket from 'ws' package\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  _s();\n  const [sock, setSock] = useState(null); // State for WebSocket connection\n  const [map, setMap] = useState(null); // State for map instance\n  const [marker, setMarker] = useState(null); // State for marker instance\n  const [location, setLocation] = useState({\n    latitude: 41.313723,\n    longitude: 69.282787\n  });\n  useEffect(() => {\n    // Create a WebSocket connection\n    const websocket = new WebSocket(\"ws://204.12.199.7:9999/ws\");\n    setSock(websocket);\n\n    // Cleanup function to close the WebSocket connection\n    return () => {\n      websocket.close();\n    };\n  }, []);\n  useEffect(() => {\n    if (!sock) return;\n\n    // WebSocket event listeners\n    sock.onopen = function (event) {\n      console.log(\"Connection successful\");\n      sock.send(\"get data\");\n    };\n    sock.onmessage = function (event) {\n      let jsonData = JSON.parse(event.data);\n      let newLocation = {\n        latitude: Number(jsonData[0].Latitude),\n        longitude: Number(jsonData[0].Longitude)\n      };\n\n      // Update location state\n      setLocation(newLocation);\n      console.log(newLocation);\n\n      // Update marker position if map and marker exist\n      if (map && marker) {\n        marker.setLatLng([newLocation.latitude, newLocation.longitude]);\n      }\n    };\n    sock.onclose = function (event) {\n      console.log(event.data);\n      console.log(\"Connection closed\");\n    };\n\n    // Initialize the map and marker\n    const newMap = DG.map(\"map-container\", {\n      center: [location.latitude, location.longitude],\n      zoom: 15\n    });\n    setMap(newMap);\n    const icon = DG.icon({\n      iconUrl: \"https://freepngimg.com/thumb/car/75694-bird's-eye-car-top-view,plan-view-icon.png\",\n      iconSize: [35, 30]\n    });\n\n    // Create marker\n    const newMarker = DG.marker([location.latitude, location.longitude], {\n      icon: icon\n    }).addTo(newMap).bindPopup(\"<h4>80-q-607-pa</h4>\");\n    setMarker(newMarker);\n\n    // Set max zoom level\n    newMap.setMinZoom(3);\n\n    // Cleanup function to remove marker when component unmounts\n    return () => {\n      if (newMarker) {\n        newMap.removeLayer(newMarker);\n      }\n    };\n  }, [sock]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-container\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n}\n_s(Test, \"TgeeA/fSVPoPwLbN6mpObFlmKfU=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","DG","WebSocket","jsxDEV","_jsxDEV","Test","_s","sock","setSock","map","setMap","marker","setMarker","location","setLocation","latitude","longitude","websocket","close","onopen","event","console","log","send","onmessage","jsonData","JSON","parse","data","newLocation","Number","Latitude","Longitude","setLatLng","onclose","newMap","center","zoom","icon","iconUrl","iconSize","newMarker","addTo","bindPopup","setMinZoom","removeLayer","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/REACT3/my-app/src/google.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DG from \"2gis-maps\";\r\nimport { WebSocket } from \"ws\"; // Import WebSocket from 'ws' package\r\n\r\nexport default function Test() {\r\n  const [sock, setSock] = useState(null); // State for WebSocket connection\r\n  const [map, setMap] = useState(null); // State for map instance\r\n  const [marker, setMarker] = useState(null); // State for marker instance\r\n  const [location, setLocation] = useState({\r\n    latitude: 41.313723,\r\n    longitude: 69.282787\r\n  });\r\n  useEffect(() => {\r\n    // Create a WebSocket connection\r\n    const websocket = new WebSocket(\"ws://204.12.199.7:9999/ws\");\r\n    setSock(websocket);\r\n\r\n    // Cleanup function to close the WebSocket connection\r\n    return () => {\r\n      websocket.close();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!sock) return;\r\n\r\n    // WebSocket event listeners\r\n    sock.onopen = function (event) {\r\n      console.log(\"Connection successful\");\r\n      sock.send(\"get data\");\r\n    };\r\n\r\n    sock.onmessage = function (event) {\r\n      let jsonData = JSON.parse(event.data);\r\n      let newLocation = {\r\n        latitude: Number(jsonData[0].Latitude),\r\n        longitude: Number(jsonData[0].Longitude)\r\n      };\r\n\r\n      // Update location state\r\n      setLocation(newLocation);\r\n      console.log(newLocation);\r\n\r\n      // Update marker position if map and marker exist\r\n      if (map && marker) {\r\n        marker.setLatLng([newLocation.latitude, newLocation.longitude]);\r\n      }\r\n    };\r\n\r\n    sock.onclose = function (event) {\r\n      console.log(event.data);\r\n      console.log(\"Connection closed\");\r\n    };\r\n\r\n    // Initialize the map and marker\r\n    const newMap = DG.map(\"map-container\", {\r\n      center: [location.latitude, location.longitude],\r\n      zoom: 15\r\n    });\r\n    setMap(newMap);\r\n\r\n    const icon = DG.icon({\r\n      iconUrl:\r\n        \"https://freepngimg.com/thumb/car/75694-bird's-eye-car-top-view,plan-view-icon.png\",\r\n      iconSize: [35, 30]\r\n    });\r\n\r\n    // Create marker\r\n    const newMarker = DG.marker([location.latitude, location.longitude], { icon: icon }).addTo(newMap).bindPopup(\"<h4>80-q-607-pa</h4>\");\r\n    setMarker(newMarker);\r\n\r\n    // Set max zoom level\r\n    newMap.setMinZoom(3);\r\n\r\n    // Cleanup function to remove marker when component unmounts\r\n    return () => {\r\n      if (newMarker) {\r\n        newMap.removeLayer(newMarker);\r\n      }\r\n    };\r\n\r\n  }, [sock]);\r\n\r\n  return <div id=\"map-container\" style={{ width: \"100%\", height: \"100vh\" }}></div>;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}